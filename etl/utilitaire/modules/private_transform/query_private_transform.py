def query_select_activites_sql():
    query="""
        SELECT
    DISTINCT a.IDENTIFIANT_DE_L_ACTIVITE,
    ir.REG AS REGION_CD,
    ir.NCC AS REGION_LB,
    rad.CODE_DEPARTEMENT_INSCRIPTION AS DEPARTEMENT_CD,
    rad.LIBELLE_DEPARTEMENT_INSCRIPTION  AS DEPARTEMENT_LB,
    a.TYPE_D_IDENTIFIANT_PP,
    a.IDENTIFIANT_PP,
    a.IDENTIFICATION_NATIONALE_PP,
    a.IDENTIFIANT_TECHNIQUE_DE_LA_STRUCTURE,
    p.NOM_D_USAGE,
    p.PRENOM_D_USAGE,
    ra.CODE_PROFESSION,
    ra.LIBELLE_PROFESSION,
    ra.CODE_CATEGORIE_PROFESSIONNELLE,
    ra.LIBELLE_CATEGORIE_PROFESSIONNELLE,
    a.CODE_FONCTION,
    a.LIBELLE_FONCTION,
    a.CODE_MODE_EXERCICE,
    a.LIBELLE_MODE_EXERCICE,
    SUBSTR( a.DATE_DE_DEBUT_ACTIVITE, 7, 4 ) || "-" || SUBSTR(a.DATE_DE_DEBUT_ACTIVITE,4,2) || "-" || SUBSTR(a.DATE_DE_DEBUT_ACTIVITE,1,2) AS DATE_DE_DEBUT_ACTIVITE,
    SUBSTR( a.DATE_DE_FIN_ACTIVITE, 7, 4 ) || "-" || SUBSTR(a.DATE_DE_FIN_ACTIVITE,4,2) || "-" || SUBSTR(a.DATE_DE_FIN_ACTIVITE,1,2) AS DATE_DE_FIN_ACTIVITE,
    CASE
    WHEN a.DATE_DE_FIN_ACTIVITE IS NULL THEN "9999" || "-" || "01" || "-" || "01"
    ELSE SUBSTR( a.DATE_DE_FIN_ACTIVITE, 7, 4 ) || "-" || SUBSTR(a.DATE_DE_FIN_ACTIVITE,4,2) || "-" || SUBSTR(a.DATE_DE_FIN_ACTIVITE,1,2)
    END AS DATE_FIN_ACTIVITE_TECHNIQUE,
    SUBSTR( a.DATE_DE_MISE_A_JOUR_ACTIVITE, 7, 4 ) || "-" || SUBSTR(a.DATE_DE_MISE_A_JOUR_ACTIVITE,4,2) || "-" || SUBSTR(a.DATE_DE_MISE_A_JOUR_ACTIVITE,1,2) AS DATE_DE_MISE_A_JOUR_ACTIVITE,
    a.CODE_REGION_EXERCICE,
    a.LIBELLE_REGION_EXERCICE,
    a.CODE_GENRE_ACTIVITE,
    a.LIBELLE_GENRE_ACTIVITE,
    a.CODE_MOTIF_DE_FIN_D_ACTIVITE,
    a.LIBELLE_MOTIF_DE_FIN_D_ACTIVITE,
    a.CODE_SECTION_TABLEAU_PHARMACIENS,
    a.LIBELLE_SECTION_TABLEAU_PHARMACIENS,
    a.CODE_SOUS_SECTION_TABLEAU_PHARMACIENS,
    a.LIBELLE_SOUS_SECTION_TABLEAU_PHARMACIENS,
    a.CODE_TYPE_ACTIVITE_LIBERALE,
    a.LIBELLE_TYPE_ACTIVITE_LIBERALE,
    a.CODE_STATUT_DES_PS_DU_SSA,
    a.LIBELLE_STATUT_DES_PS_DU_SSA,
    a.CODE_STATUT_HOSPITALIER,
    a.LIBELLE_STATUT_HOSPITALIER,
    a.CODE_PROFESSION,
    a.LIBELLE_PROFESSION,
    a.CODE_CATEGORIE_PROFESSIONNELLE,
    a.LIBELLE_CATEGORIE_PROFESSIONNELLE,
    ca.COMPLEMENT_DESTINATAIRE_COORD_ACTIVITE,
    ca.COMPLEMENT_POINT_GEOGRAPHIQUE_COORD_ACTIVITE,
    ca.NUMERO_VOIE_COORD_ACTIVITE,
    ca.INDICE_REPETITION_VOIE_COORD_ACTIVITE,
    ca.CODE_TYPE_DE_VOIE_COORD_ACTIVITE,
    ca.LIBELLE_TYPE_DE_VOIE_COORD_ACTIVITE,
    ca.LIBELLE_VOIE_COORD_ACTIVITE,
    ca.MENTION_DISTRIBUTION_COORD_ACTIVITE,
    ca.BUREAU_CEDEX_COORD_ACTIVITE,
    ca.CODE_POSTAL_COORD_ACTIVITE,
    ca.CODE_COMMUNE_COORD_ACTIVITE,
    ca.LIBELLE_COMMUNE_COORD_ACTIVITE,
    dep.NCC as DEPARTEMENT_COORD_ACTIVITE,
    reg.NCC as REGION_COORD_ACTIVITE,
    ca.CODE_PAYS_COORD_ACTIVITE,
    ca.LIBELLE_PAYS_COORD_ACTIVITE,
    ca.TELEPHONE_COORD_ACTIVITE,
    ca.TELEPHONE_2_COORD_ACTIVITE,
    ca.TELECOPIE_COORD_ACTIVITE,
    ca.ADRESSE_EMAIL_COORD_ACTIVITE,
    ca.DATE_DE_MISE_A_JOUR_COORD_ACTIVITE,
    ca.DATE_DE_FIN_COORD_ACTIVITE,
    s.NUMERO_SIRET,
    s.NUMERO_SIREN,
    s.NUMERO_FINESS_ETABLISSEMENT,
    s.NUMERO_FINESS_EJ,
    s.RPPS_RANG,
    s.ADELI_RANG,
    s.NUMERO_LICENCE_OFFICINE,
    s.DATE_D_OUVERTURE_STRUCTURE,
    s.DATE_DE_FERMETURE_STRUCTURE,
    s.DATE_DE_MISE_A_JOUR_STRUCTURE,
    s.CODE_APE,
    s.LIBELLE_APE,
    s.CODE_CATEGORIE_JURIDIQUE,
    s.LIBELLE_CATEGORIE_JURIDIQUE,
    s.CODE_SECTEUR_D_ACTIVITE,
    s.LIBELLE_SECTEUR_D_ACTIVITE,
    s.RAISON_SOCIALE,
    s.ENSEIGNE_COMMERCIALE,
    cs.NUMERO_VOIE_COORD_STRUCTURE,
    cs.INDICE_REPETITION_VOIE_COORD_STRUCTURE,
    cs.CODE_TYPE_DE_VOIE_COORD_STRUCTURE,
    cs.LIBELLE_TYPE_DE_VOIE_COORD_STRUCTURE,
    cs.LIBELLE_VOIE_COORD_STRUCTURE,
    cs.MENTION_DISTRIBUTION_COORD_STRUCTURE,
    cs.BUREAU_CEDEX_COORD_STRUCTURE,
    cs.CODE_POSTAL_COORD_STRUCTURE,
    cs.CODE_COMMUNE_COORD_STRUCTURE,
    cs.LIBELLE_COMMUNE_COORD_STRUCTURE,
    cs.CODE_PAYS_COORD_STRUCTURE,
    cs.LIBELLE_PAYS_COORD_STRUCTURE,
    cs.TELEPHONE_COORD_STRUCTURE,
    cs.TELEPHONE_2_COORD_STRUCTURE,
    cs.TELECOPIE_COORD_STRUCTURE,
    cs.ADRESSE_EMAIL_COORD_STRUCTURE,
    cs.DATE_DE_MISE_A_JOUR_COORD_STRUCTURE,
    cs.DATE_DE_FIN_COORD_STRUCTURE
    FROM ACTIVITE a
    LEFT JOIN COORDACT ca ON a.IDENTIFIANT_DE_L_ACTIVITE=ca.IDENTIFIANT_DE_L_ACTIVITE
    LEFT JOIN STRUCTURE s ON a.IDENTIFIANT_TECHNIQUE_DE_LA_STRUCTURE=s.IDENTIFIANT_TECHNIQUE_DE_LA_STRUCTURE   
    LEFT JOIN COORDSTRUCT cs ON a.IDENTIFIANT_TECHNIQUE_DE_LA_STRUCTURE=cs.IDENTIFIANT_TECHNIQUE_DE_LA_STRUCTURE
    LEFT JOIN INSEE_COMMUNES com ON ca.CODE_COMMUNE_COORD_ACTIVITE=com.com
    LEFT JOIN INSEE_DEPARTEMENT dep ON com.dep=dep.DEP
    LEFT JOIN INSEE_REGION reg ON dep.REG=reg.reg
    LEFT JOIN REFERAE ra ON a.IDENTIFIANT_PP=ra.IDENTIFIANT_PP
    LEFT JOIN COORDCORRESP cc ON a.IDENTIFIANT_PP=cc.IDENTIFIANT_PP 
    LEFT JOIN PERSONNE p ON a.IDENTIFIANT_PP=p.IDENTIFIANT_PP
    LEFT JOIN INSEE_DEPARTEMENT id ON 
    IIF( 
    -- condition : code département n'est pas 97 ou 98
    (IIF(ca.CODE_COMMUNE_COORD_ACTIVITE IS NOT NULL, SUBSTR(ca.CODE_COMMUNE_COORD_ACTIVITE, 1, 2), 
    IIF(ca.CODE_POSTAL_COORD_ACTIVITE IS NOT NULL, SUBSTR(ca.CODE_POSTAL_COORD_ACTIVITE, 1, 2),
    IIF(cs.CODE_COMMUNE_COORD_STRUCTURE IS NOT NULL, SUBSTR(cs.CODE_COMMUNE_COORD_STRUCTURE, 1, 2),
    IIF(cs.CODE_POSTAL_COORD_STRUCTURE IS NOT NULL, SUBSTR(cs.CODE_POSTAL_COORD_STRUCTURE, 1, 2),
    IIF(cc.CODE_COMMUNE_COORD_CORRESPONDANCE IS NOT NULL, SUBSTR(cc.CODE_COMMUNE_COORD_CORRESPONDANCE, 1, 2),
    IIF(cc.CODE_POSTAL_COORD_CORRESPONDANCE IS NOT NULL, SUBSTR(cc.CODE_POSTAL_COORD_CORRESPONDANCE, 1, 2),
    ra.CODE_DEPARTEMENT_INSCRIPTION ))))))) NOT IN (
    "97",
    "98"),
    -- vrai : code département issu de la règle classique
    (IIF(ca.CODE_COMMUNE_COORD_ACTIVITE IS NOT NULL, SUBSTR(ca.CODE_COMMUNE_COORD_ACTIVITE, 1, 2), 
    IIF(ca.CODE_POSTAL_COORD_ACTIVITE IS NOT NULL, SUBSTR(ca.CODE_POSTAL_COORD_ACTIVITE, 1, 2),
    IIF(cs.CODE_COMMUNE_COORD_STRUCTURE IS NOT NULL, SUBSTR(cs.CODE_COMMUNE_COORD_STRUCTURE, 1, 2),
    IIF(cs.CODE_POSTAL_COORD_STRUCTURE IS NOT NULL, SUBSTR(cs.CODE_POSTAL_COORD_STRUCTURE, 1, 2),
    IIF(cc.CODE_COMMUNE_COORD_CORRESPONDANCE IS NOT NULL, SUBSTR(cc.CODE_COMMUNE_COORD_CORRESPONDANCE, 1, 2),
    IIF(cc.CODE_POSTAL_COORD_CORRESPONDANCE IS NOT NULL, SUBSTR(cc.CODE_POSTAL_COORD_CORRESPONDANCE, 1, 2),
    ra.CODE_DEPARTEMENT_INSCRIPTION ))))))),
    -- faux : code département à 3 chiffres
    (IIF(ca.CODE_COMMUNE_COORD_ACTIVITE IS NOT NULL AND (SUBSTR(ca.CODE_COMMUNE_COORD_ACTIVITE, 1, 2) = "97" OR SUBSTR(ca.CODE_COMMUNE_COORD_ACTIVITE, 1, 2) = "98"), SUBSTR(ca.CODE_COMMUNE_COORD_ACTIVITE, 1, 3), 
    IIF(ca.CODE_POSTAL_COORD_ACTIVITE IS NOT NULL AND (SUBSTR(ca.CODE_POSTAL_COORD_ACTIVITE, 1, 2) = "97" OR SUBSTR(ca.CODE_POSTAL_COORD_ACTIVITE, 1, 2) = "98"), SUBSTR(ca.CODE_POSTAL_COORD_ACTIVITE, 1, 3),
    IIF(cs.CODE_COMMUNE_COORD_STRUCTURE IS NOT NULL AND (SUBSTR(cs.CODE_COMMUNE_COORD_STRUCTURE, 1, 2) = "97" OR SUBSTR(cs.CODE_COMMUNE_COORD_STRUCTURE, 1, 2) = "98"), SUBSTR(cs.CODE_COMMUNE_COORD_STRUCTURE, 1, 3),
    IIF(cs.CODE_POSTAL_COORD_STRUCTURE IS NOT NULL AND (SUBSTR(cs.CODE_POSTAL_COORD_STRUCTURE, 1, 2) = "97" OR SUBSTR(cs.CODE_POSTAL_COORD_STRUCTURE, 1, 2) = "98"), SUBSTR(cs.CODE_POSTAL_COORD_STRUCTURE, 1, 3),
    IIF(cc.CODE_COMMUNE_COORD_CORRESPONDANCE IS NOT NULL AND (SUBSTR(cc.CODE_COMMUNE_COORD_CORRESPONDANCE, 1, 2) = "97" OR SUBSTR(cc.CODE_COMMUNE_COORD_CORRESPONDANCE, 1, 2) = "98"), SUBSTR(cc.CODE_COMMUNE_COORD_CORRESPONDANCE, 1, 3),
    IIF(cc.CODE_POSTAL_COORD_CORRESPONDANCE IS NOT NULL AND (SUBSTR(cc.CODE_POSTAL_COORD_CORRESPONDANCE, 1, 2) = "97" OR SUBSTR(cc.CODE_POSTAL_COORD_CORRESPONDANCE, 1, 2) = "98"), SUBSTR(cc.CODE_POSTAL_COORD_CORRESPONDANCE, 1, 3),
    IIF(LENGTH(ra.CODE_DEPARTEMENT_INSCRIPTION)=3, ra.CODE_DEPARTEMENT_INSCRIPTION, NULL)))))))) 
    ) = id.DEP 
    LEFT JOIN INSEE_REGION ir ON id.REG=ir.REG 
    -- pour avoir tous les libellés départements, même 98X
    LEFT JOIN (
    SELECT 
    DISTINCT CODE_DEPARTEMENT_INSCRIPTION ,
    LIBELLE_DEPARTEMENT_INSCRIPTION 
    FROM REFERAE
    ) rad ON  
    IIF( 
    -- condition : code département n'est pas 97 ou 98
    (IIF(ca.CODE_COMMUNE_COORD_ACTIVITE IS NOT NULL, SUBSTR(ca.CODE_COMMUNE_COORD_ACTIVITE, 1, 2), 
    IIF(ca.CODE_POSTAL_COORD_ACTIVITE IS NOT NULL, SUBSTR(ca.CODE_POSTAL_COORD_ACTIVITE, 1, 2),
    IIF(cs.CODE_COMMUNE_COORD_STRUCTURE IS NOT NULL, SUBSTR(cs.CODE_COMMUNE_COORD_STRUCTURE, 1, 2),
    IIF(cs.CODE_POSTAL_COORD_STRUCTURE IS NOT NULL, SUBSTR(cs.CODE_POSTAL_COORD_STRUCTURE, 1, 2),
    IIF(cc.CODE_COMMUNE_COORD_CORRESPONDANCE IS NOT NULL, SUBSTR(cc.CODE_COMMUNE_COORD_CORRESPONDANCE, 1, 2),
    IIF(cc.CODE_POSTAL_COORD_CORRESPONDANCE IS NOT NULL, SUBSTR(cc.CODE_POSTAL_COORD_CORRESPONDANCE, 1, 2),
    ra.CODE_DEPARTEMENT_INSCRIPTION ))))))) NOT IN (
    "97",
    "98"),
    -- vrai : code département issu de la règle classique
    (IIF(ca.CODE_COMMUNE_COORD_ACTIVITE IS NOT NULL, SUBSTR(ca.CODE_COMMUNE_COORD_ACTIVITE, 1, 2), 
    IIF(ca.CODE_POSTAL_COORD_ACTIVITE IS NOT NULL, SUBSTR(ca.CODE_POSTAL_COORD_ACTIVITE, 1, 2),
    IIF(cs.CODE_COMMUNE_COORD_STRUCTURE IS NOT NULL, SUBSTR(cs.CODE_COMMUNE_COORD_STRUCTURE, 1, 2),
    IIF(cs.CODE_POSTAL_COORD_STRUCTURE IS NOT NULL, SUBSTR(cs.CODE_POSTAL_COORD_STRUCTURE, 1, 2),
    IIF(cc.CODE_COMMUNE_COORD_CORRESPONDANCE IS NOT NULL, SUBSTR(cc.CODE_COMMUNE_COORD_CORRESPONDANCE, 1, 2),
    IIF(cc.CODE_POSTAL_COORD_CORRESPONDANCE IS NOT NULL, SUBSTR(cc.CODE_POSTAL_COORD_CORRESPONDANCE, 1, 2),
    ra.CODE_DEPARTEMENT_INSCRIPTION ))))))),
    -- faux : code département à 3 chiffres
    (IIF(ca.CODE_COMMUNE_COORD_ACTIVITE IS NOT NULL AND (SUBSTR(ca.CODE_COMMUNE_COORD_ACTIVITE, 1, 2) = "97" OR SUBSTR(ca.CODE_COMMUNE_COORD_ACTIVITE, 1, 2) = "98"), SUBSTR(ca.CODE_COMMUNE_COORD_ACTIVITE, 1, 3), 
    IIF(ca.CODE_POSTAL_COORD_ACTIVITE IS NOT NULL AND (SUBSTR(ca.CODE_POSTAL_COORD_ACTIVITE, 1, 2) = "97" OR SUBSTR(ca.CODE_POSTAL_COORD_ACTIVITE, 1, 2) = "98"), SUBSTR(ca.CODE_POSTAL_COORD_ACTIVITE, 1, 3),
    IIF(cs.CODE_COMMUNE_COORD_STRUCTURE IS NOT NULL AND (SUBSTR(cs.CODE_COMMUNE_COORD_STRUCTURE, 1, 2) = "97" OR SUBSTR(cs.CODE_COMMUNE_COORD_STRUCTURE, 1, 2) = "98"), SUBSTR(cs.CODE_COMMUNE_COORD_STRUCTURE, 1, 3),
    IIF(cs.CODE_POSTAL_COORD_STRUCTURE IS NOT NULL AND (SUBSTR(cs.CODE_POSTAL_COORD_STRUCTURE, 1, 2) = "97" OR SUBSTR(cs.CODE_POSTAL_COORD_STRUCTURE, 1, 2) = "98"), SUBSTR(cs.CODE_POSTAL_COORD_STRUCTURE, 1, 3),
    IIF(cc.CODE_COMMUNE_COORD_CORRESPONDANCE IS NOT NULL AND (SUBSTR(cc.CODE_COMMUNE_COORD_CORRESPONDANCE, 1, 2) = "97" OR SUBSTR(cc.CODE_COMMUNE_COORD_CORRESPONDANCE, 1, 2) = "98"), SUBSTR(cc.CODE_COMMUNE_COORD_CORRESPONDANCE, 1, 3),
    IIF(cc.CODE_POSTAL_COORD_CORRESPONDANCE IS NOT NULL AND (SUBSTR(cc.CODE_POSTAL_COORD_CORRESPONDANCE, 1, 2) = "97" OR SUBSTR(cc.CODE_POSTAL_COORD_CORRESPONDANCE, 1, 2) = "98"), SUBSTR(cc.CODE_POSTAL_COORD_CORRESPONDANCE, 1, 3),
    IIF(LENGTH(ra.CODE_DEPARTEMENT_INSCRIPTION)=3, ra.CODE_DEPARTEMENT_INSCRIPTION, NULL)))))))) 
    ) = rad.CODE_DEPARTEMENT_INSCRIPTION
    """
    
    return query


def query_select_personnes_sql():
    query = """
        SELECT
            dep.NCC as DEPARTEMENT_COORD_CORRESPONDANCE,
            reg.NCC as REGION_COORD_CORRESPONDANCE,
            p.TYPE_D_IDENTIFIANT_PP,
            p.IDENTIFIANT_PP,
            p.IDENTIFICATION_NATIONALE_PP,
            p.CODE_CIVILITE,
            p.LIBELLE_CIVILITE,
            p.NOM_D_USAGE,
            p.PRENOM_D_USAGE,
            p.NATURE,
            p.DATE_D_EFFET,
            p.DATE_DE_MISE_A_JOUR_PERSONNE,
            cc.COMPLEMENT_DESTINATAIRE_COORD_CORRESPONDANCE,
            cc.COMPLEMENT_POINT_GEOGRAPHIQUE_COORD_CORRESPONDANCE,
            cc.NUMERO_VOIE_COORD_CORRESPONDANCE,
            cc.INDICE_REPETITION_VOIE_COORD_CORRESPONDANCE,
            cc.CODE_TYPE_DE_VOIE_COORD_CORRESPONDANCE,
            cc.LIBELLE_TYPE_DE_VOIE_COORD_CORRESPONDANCE,
            cc.LIBELLE_VOIE_COORD_CORRESPONDANCE,
            cc.MENTION_DISTRIBUTION_COORD_CORRESPONDANCE,
            cc.BUREAU_CEDEX_COORD_CORRESPONDANCE,
            cc.CODE_POSTAL_COORD_CORRESPONDANCE,
            cc.CODE_COMMUNE_COORD_CORRESPONDANCE,
            cc.LIBELLE_COMMUNE_COORD_CORRESPONDANCE,
            cc.CODE_PAYS_COORD_CORRESPONDANCE,
            cc.LIBELLE_PAYS_COORD_CORRESPONDANCE,
            cc.TELEPHONE_COORD_CORRESPONDANCE,
            cc.TELEPHONE_2_COORD_CORRESPONDANCE,
            cc.TELECOPIE_COORD_CORRESPONDANCE,
            cc.ADRESSE_EMAIL_COORD_CORRESPONDANCE,
            cc.DATE_DE_MISE_A_JOUR_COORD_CORRESPONDANCE,
            cc.DATE_DE_FIN_COORD_CORRESPONDANCE,
            ec.CODE_STATUT_ETAT_CIVIL,
            ec.LIBELLE_STATUT_ETAT_CIVIL,
            ec.CODE_SEXE,
            ec.LIBELLE_SEXE,
            ec.NOM_DE_FAMILLE,
            ec.PRENOMS,
            ec.DATE_DE_NAISSANCE,
            ec.LIEU_DE_NAISSANCE,
            ec.DATE_DE_DECES,
            ec.DATE_D_EFFET_DE_L_ETAT_CIVIL,
            ec.CODE_COMMUNE_DE_NAISSANCE,
            ec.LIBELLE_COMMUNE_DE_NAISSANCE,
            ec.CODE_PAYS_DE_NAISSANCE,
            ec.LIBELLE_PAYS_DE_NAISSANCE,
            ec.DATE_DE_MISE_A_JOUR_ETAT_CIVIL,
            ae.DATE_EFFET_AUTORISATION,
            ae.CODE_TYPE_AUTORISATION,
            ae.LIBELLE_TYPE_AUTORISATION,
            ae.DATE_FIN_AUTORISATION,
            ae.DATE_DE_MISE_A_JOUR_AUTORISATION,
            ae.CODE_DISCIPLINE_AUTORISATION,
            ae.LIBELLE_DISCIPLINE_AUTORISATION,
            ra.CODE_AE,
            ra.LIBELLE_AE,
            ra.DATE_DEBUT_INSCRIPTION,
            ra.DATE_FIN_INSCRIPTION,
            ra.DATE_DE_MISE_A_JOUR_INSCRIPTION,
            ra.CODE_STATUT_INSCRIPTION,
            ra.LIBELLE_STATUT_INSCRIPTION,
            ra.CODE_DEPARTEMENT_INSCRIPTION,
            ra.LIBELLE_DEPARTEMENT_INSCRIPTION,
            ra.CODE_DEPARTEMENT_ACCUEIL,
            ra.LIBELLE_DEPARTEMENT_ACCUEIL,
            ep.CODE_CIVILITE_D_EXERCICE,
            ep.LIBELLE_CIVILITE_D_EXERCICE,
            ep.NOM_D_EXERCICE,
            ep.PRENOM_D_EXERCICE,
            ep.CODE_PROFESSION,
            ep.LIBELLE_PROFESSION,
            ep.CODE_CATEGORIE_PROFESSIONNELLE,
            ep.LIBELLE_CATEGORIE_PROFESSIONNELLE,
            ep.DATE_DE_FIN_EXERCICE,
            ep.DATE_DE_MISE_A_JOUR_EXERCICE,
            ep.DATE_EFFET_EXERCICE,
            ep.CODE_AE_1E_INSCRIPTION,
            ep.LIBELLE_AE_1E_INSCRIPTION,
            ep.DATE_DEBUT_1E_INSCRIPTION,
            ep.DEPARTEMENT_1E_INSCRIPTION,
            ep.LIBELLE_DEPARTEMENT_1E_INSCRIPTION,
            sf.CODE_SAVOIR_FAIRE,
            sf.LIBELLE_SAVOIR_FAIRE,
            sf.CODE_TYPE_SAVOIR_FAIRE,
            sf.LIBELLE_TYPE_SAVOIR_FAIRE,
            sf.DATE_RECONNAISSANCE_SAVOIR_FAIRE,
            sf.DATE_DE_MISE_A_JOUR_SAVOIR_FAIRE,
            sf.DATE_ABANDON_SAVOIR_FAIRE,
            do.CODE_TYPE_DIPLOME_OBTENU,
            do.LIBELLE_TYPE_DIPLOME_OBTENU,
            do.CODE_DIPLOME_OBTENU,
            do.LIBELLE_DIPLOME_OBTENU,
            do.DATE_DE_MISE_A_JOUR_DIPLOME_OBTENU,
            do.CODE_LIEU_OBTENTION,
            do.LIBELLE_LIEU_OBTENTION,
            do.DATE_D_OBTENTION_DIPLOME,
            do.NUMERO_DIPLOME
        FROM PERSONNE p
        LEFT JOIN COORDCORRESP cc ON p.IDENTIFIANT_PP=cc.IDENTIFIANT_PP
        LEFT JOIN ETATCIV ec ON p.IDENTIFIANT_PP=ec.IDENTIFIANT_PP
        LEFT JOIN AUTEXERC ae ON p.IDENTIFIANT_PP=ae.IDENTIFIANT_PP
        LEFT JOIN REFERAE ra ON p.IDENTIFIANT_PP=ra.IDENTIFIANT_PP
        LEFT JOIN EXERCPRO ep ON p.IDENTIFIANT_PP=ep.IDENTIFIANT_PP
        LEFT JOIN SAVOIRFAIRE sf ON p.IDENTIFIANT_PP=sf.IDENTIFIANT_PP
        LEFT JOIN DIPLOBT do ON p.IDENTIFIANT_PP=do.IDENTIFIANT_PP
        LEFT JOIN INSEE_COMMUNES com ON cc.CODE_COMMUNE_COORD_CORRESPONDANCE=com.com     
        LEFT JOIN INSEE_DEPARTEMENT dep ON com.dep=dep.DEP
        LEFT JOIN INSEE_REGION reg ON dep.REG=reg.reg ;
        """

    return query

def query_select_activites_vs_savoirfaire_sql():
    query = """
        SELECT 
            INSEE_REGION.REG AS REGION_COORD_ACTIVITE_CD,
            INSEE_REGION.LIBELLE AS REGION_COORD_ACTIVITE_LB,
            INSEE_DEPARTEMENT.DEP AS DEPARTEMENT_COORD_ACTIVITE_CD,
            INSEE_DEPARTEMENT.LIBELLE AS DEPARTEMENT_COORD_ACTIVITE_LB,
            COORDACT.CODE_COMMUNE_COORD_ACTIVITE,
            COORDACT.LIBELLE_COMMUNE_COORD_ACTIVITE,
            ACTIVITE.IDENTIFIANT_PP,
            ETATCIV.NOM_DE_FAMILLE,
            ETATCIV.PRENOMS,
            ACTIVITE.CODE_PROFESSION,
            ACTIVITE.LIBELLE_PROFESSION,
            ACTIVITE.CODE_CATEGORIE_PROFESSIONNELLE,
            ACTIVITE.LIBELLE_CATEGORIE_PROFESSIONNELLE,
            SAVOIRFAIRE.CODE_SAVOIR_FAIRE,
            SAVOIRFAIRE.LIBELLE_SAVOIR_FAIRE,
            ACTIVITE.CODE_FONCTION,
            ACTIVITE.LIBELLE_FONCTION,
            ACTIVITE.CODE_MODE_EXERCICE,
            ACTIVITE.LIBELLE_MODE_EXERCICE,
            SUBSTR( ACTIVITE.DATE_DE_DEBUT_ACTIVITE, 7, 4 ) || "-" || SUBSTR(ACTIVITE.DATE_DE_DEBUT_ACTIVITE,4,2) || "-" || SUBSTR(ACTIVITE.DATE_DE_DEBUT_ACTIVITE,1,2) AS DATE_DE_DEBUT_ACTIVITE,
            SUBSTR( ACTIVITE.DATE_DE_FIN_ACTIVITE, 7, 4 ) || "-" || SUBSTR(ACTIVITE.DATE_DE_FIN_ACTIVITE,4,2) || "-" || SUBSTR(ACTIVITE.DATE_DE_FIN_ACTIVITE,1,2) AS DATE_DE_FIN_ACTIVITE,
            CASE
                WHEN ACTIVITE.DATE_DE_FIN_ACTIVITE IS NULL THEN DATE('NOW')
                ELSE SUBSTR( ACTIVITE.DATE_DE_FIN_ACTIVITE, 7, 4 ) || "-" || SUBSTR(ACTIVITE.DATE_DE_FIN_ACTIVITE,4,2) || "-" || SUBSTR(ACTIVITE.DATE_DE_FIN_ACTIVITE,1,2)
            END AS DATE_FIN_ACTIVITE_TECHNIQUE,
            "STRUCTURE".CODE_CATEGORIE_JURIDIQUE,
            "STRUCTURE".LIBELLE_CATEGORIE_JURIDIQUE, 
            "STRUCTURE".CODE_SECTEUR_D_ACTIVITE, 
            "STRUCTURE".LIBELLE_SECTEUR_D_ACTIVITE, 
            "STRUCTURE".RAISON_SOCIALE,
            COORDSTRUCT.CODE_COMMUNE_COORD_STRUCTURE,
            COORDSTRUCT.LIBELLE_COMMUNE_COORD_STRUCTURE
        FROM ACTIVITE
        LEFT JOIN ETATCIV ON ACTIVITE.IDENTIFIANT_PP = ETATCIV.IDENTIFIANT_PP 
        LEFT JOIN COORDACT ON ACTIVITE.IDENTIFIANT_DE_L_ACTIVITE = COORDACT.IDENTIFIANT_DE_L_ACTIVITE
        LEFT JOIN "STRUCTURE" ON ACTIVITE.IDENTIFIANT_TECHNIQUE_DE_LA_STRUCTURE = "STRUCTURE".IDENTIFIANT_TECHNIQUE_DE_LA_STRUCTURE 
        LEFT JOIN COORDSTRUCT ON "STRUCTURE".IDENTIFIANT_TECHNIQUE_DE_LA_STRUCTURE = COORDSTRUCT.IDENTIFIANT_TECHNIQUE_DE_LA_STRUCTURE 
        LEFT JOIN INSEE_COMMUNES ON COORDACT.CODE_COMMUNE_COORD_ACTIVITE = INSEE_COMMUNES.COM 
        LEFT JOIN INSEE_DEPARTEMENT ON INSEE_COMMUNES.DEP = INSEE_DEPARTEMENT.DEP 
        LEFT JOIN INSEE_REGION ON INSEE_DEPARTEMENT.REG = INSEE_REGION.REG 
        LEFT JOIN SAVOIRFAIRE ON ACTIVITE.IDENTIFIANT_PP = SAVOIRFAIRE.IDENTIFIANT_PP
        WHERE (ACTIVITE.DATE_DE_FIN_ACTIVITE IS NULL) OR (substr(ACTIVITE.DATE_DE_FIN_ACTIVITE ,7)||substr(ACTIVITE.DATE_DE_FIN_ACTIVITE,4,2)||substr(ACTIVITE.DATE_DE_FIN_ACTIVITE,1,2) >= substr(DATE('NOW') ,1,4)||substr(DATE('NOW'),6,2)||substr(DATE('NOW'),9,2));
        """

    return query
